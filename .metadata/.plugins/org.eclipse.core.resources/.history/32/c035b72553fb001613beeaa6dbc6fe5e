package hvcntt.org.shoppingweb.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import hvcntt.org.shoppingweb.model.Customer;
import hvcntt.org.shoppingweb.model.Person;
import hvcntt.org.shoppingweb.service.CustomerService;

@Controller
public class AjaxDemoController {
	@Autowired
	CustomerService customerservice;
	private List<Person> personGroup = new ArrayList<Person>();
	@RequestMapping(value="/ajax",method = RequestMethod.GET)
	public ModelAndView ajaxpage(){
		ModelAndView mv= new ModelAndView("ajax");
		return mv;
	}
	@RequestMapping(value="/addnew", method=RequestMethod.GET)
	public @ResponseBody String addNew(HttpServletRequest request){
		String name = request.getParameter("name");
		String age = request.getParameter("age");
		Person person = new Person(name, age);
		personGroup.add(person);
		ObjectMapper object= new ObjectMapper();
		String ajaxReponse = "";
		try{
			ajaxReponse =  object.writeValueAsString(person);
		}catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		return ajaxReponse;
	}
	@RequestMapping(value="/search")
	public @ResponseBody String searchPerson(HttpServletRequest request){
		String query = request.getParameter("name");
		Person person = searchByName(query);
		ObjectMapper object= new ObjectMapper();
		String ajaxreponse = "";
		try {
			ajaxreponse = object.writeValueAsString(person);
		} catch (JsonProcessingException e) {
			e.printStackTrace();
		}
		return ajaxreponse;
	}
	public Person searchByName(String query){
		for(Person p: personGroup ){
			if(p.getName().equals(query)){
				return p;
			}
		}
		return null;
	}
	@RequestMapping(value="/ajaxsave")
	public String ajaxSave(){
		return "ajaxsave";
	}
	@RequestMapping("/listcustomer")
    public ModelAndView home(ModelMap model) {
        model.put("customers", customerservice.getAll());
        return new ModelAndView("ajaxsave", model);
    }
    
    @RequestMapping(value = "/save", method = RequestMethod.POST)
    @ResponseBody
    public Customer saveCustomer(Customer customer) {
        customerservice.create(customer);
        return customer;
    }
    @RequestMapping(value="getJSon/{firstname}/{lastname}",method=RequestMethod.GET)
    @ResponseBody
    public Customer findName(@PathVariable("firstname") String firstname,@PathVariable("lastname")String lastname){
    	Customer customer=customerservice.findByName(firstname, lastname);
    	return customer;
    }
    @RequestMapping(value="/load",method=RequestMethod.GET)
    public ModelAndView load(){
    	return new ModelAndView("home");
    }
    
    @RequestMapping(value="/load/{lastname}",method=RequestMethod.GET)
    public ModelAndView searchName(@PathVariable("lastname")String lastname,ModelMap model){
    	model.put("customer", customerservice.findByLastname(lastname));
    	return new ModelAndView("search",model);
    }
    
}
